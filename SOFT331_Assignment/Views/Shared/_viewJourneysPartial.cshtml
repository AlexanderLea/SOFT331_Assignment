@model SOFT331_Assignment.Models.Journey


<!-- Assuming there are journeys, display train and journey name at top of page-->
@{
    if (Model != null)
    {
        string trainName = Model.Train.ToString();
        string journeyType = Model.Event.Name;

        <table>
            <tr>
                <td><strong>@Html.DisplayNameFor(model => model.Train.Name)</strong>:</td>
                <td>@Html.DisplayFor(modelItem => trainName)</td>
            </tr>
            <tr>
                <td><strong>@Html.DisplayNameFor(model => model.Event.Name)</strong>:</td>
                <td>@Html.DisplayFor(modelItem => journeyType)</td>
            </tr>
        </table>
    }
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Event.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvanceTickets)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstClassTickets)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfSeats)
        </th>
    </tr>

        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model.Event.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.AdvanceTickets)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.FirstClassTickets)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.NumberOfSeats)
            </td>

        </tr>

    @foreach (var stop in Model.Stops)
    {
        <tr>
            <td>Hello</td>
            <td colspan="3">
                @Html.DisplayFor(s => stop.Station.StationName)
                &nbsp; <strong>Arriving:</strong>
                @Html.DisplayFor(s => stop.ArrivalTime)
                &nbsp; <strong>Departing:</strong>
                @Html.DisplayFor(s => stop.DepartureTime)
            </td>
        </tr>
    }

</table>
